[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "udataclasses"
description = "CircuitPython replacement for the Python's dataclasses module."
requires-python = ">=3.11"
license = "MIT"
keywords = ["circuitpython", "microcontroller", "micropython"]
authors = [
  { name = "Diony Rosa", email = "dhrosa+dev@gmail.com" },
]
dynamic = ["version"]

dependencies = []

[project.urls]
"Source code" = "https://github.com/dhrosa/udataclasses"

[tool.hatch.version]
path = "src/udataclasses/__init__.py"

[tool.hatch.envs.default]
python = '3.11'

[tool.hatch.envs.default.scripts]
# Meta command to run all dev workflows
all = [
    "hatch run style:all",
    "hatch run test:all",
    "hatch run docs:sphinx",
]

[tool.hatch.envs.style]
dependencies = ["setuptools", "isort", "black", "pylama", "mypy", "pytest"]

[tool.hatch.envs.style.scripts]
format = [
       "isort --color src tests",
       "black src tests",
]
check = [
      "pylama --ignore E203 src tests", # E203 is not pep8-compliant, and black breaks it
      "mypy --strict --pretty src tests",
] 
all = ["format", "check"]

[tool.hatch.envs.test]
dependencies = ["pytest"]

[tool.hatch.envs.docs]
dependencies = ["sphinx", "sphinx-rtd-theme", "sphinx-design"]

[tool.hatch.envs.docs.scripts]
sphinx = "make -C docs html"

[tool.hatch.envs.test.scripts]
# We assume Docker is runnable by the current user. To set this up, see
# https://docs.docker.com/engine/install/linux-postinstall/
micropython = "docker run --rm $(docker build --quiet -f tests/micropython/Dockerfile .)"
host = "pytest"
all = ["host", "micropython"]

[tool.pytest.ini_options]
addopts = "--no-header -W error --showlocals"
log_level = "DEBUG"